package com.cmput301.cs.project.models;


import android.os.Parcel;
import android.os.Parcelable;

/**
 * A class that contains text and an {@link com.cmput301.cs.project.models.User Approver Name}.
 * This is linked to a {@link com.cmput301.cs.project.models.Claim Claim} when an approver returns a claim to
 * a {@link com.cmput301.cs.project.models.User Claimant}.
 * 
 * @author rozsa
 *
 */

public class Comment implements Parcelable {
    private final String text;
    private final User approver;

    public Comment(String text, User approver) {
        if (text == null || text.isEmpty()) {
            throw new IllegalArgumentException();
        }

        if (approver == null) {
            throw new IllegalArgumentException();
        }

        this.text = text;
        this.approver = approver;
    }


    public User getApprover() {
        return approver;
    }

    public String getText() {
        return text;
    }

    @Override
    public boolean equals(Object o) {

        if (this == o) return true;
        if (!(o instanceof Comment)) return false;

        final Comment comment = (Comment) o;

        return comment.text.equals(text) && comment.approver.equals(approver);
    }

    @Override
    public int hashCode() {
        int result = approver.hashCode();
        result = 31 * result + text.hashCode();

        return result;
    }

    // generated by http://www.parcelabler.com/
    protected Comment(Parcel in) {
        text = in.readString();
        approver = (User) in.readValue(User.class.getClassLoader());
    }

    @Override
    public int describeContents() {
        return 0;
    }

    // generated by http://www.parcelabler.com/
    @Override
    public void writeToParcel(Parcel dest, int flags) {
        dest.writeString(text);
        dest.writeValue(approver);
    }

    // generated by http://www.parcelabler.com/
    public static final Parcelable.Creator<Comment> CREATOR = new Parcelable.Creator<Comment>() {
        @Override
        public Comment createFromParcel(Parcel in) {
            return new Comment(in);
        }

        @Override
        public Comment[] newArray(int size) {
            return new Comment[size];
        }
    };
}